Jbuilder is a tool you will use to customize the JSON responses you send back from your rails server.
With Jbuilder, Rails allows you to use your views folder to create JSON templates for your responses. Rather than building HTML views, you can instead create JSON "views" using Jbuilder and Ruby code.
When making a Jbuilder template, you'll simply place a file with the extension .json.jbuilder where you've previously been putting your ERB files.

# Api::UsersController
def show
  @user = User.find(params[:id])
  render :show
end

# /app/views/api/users/show.json.jbuilder
json.extract! @user, :id, :username
json.comments do
  @user.comments.each do |comment|
    json.set! comment.id do
      json.extract! comment, :id, :author_id, :body, :created_at
    end
  end
end

{
  "id": 1
  "username": "howardmohr93",
  "comments": {
    "1": {
      "id": "1",
      "author_id": "1",
      "body": "Can't complain",
      "created_at": "2019-02-20 13:33:06 -0800"
    },
    "2": {
      "id": "2",
      "author_id": "1",
      "body": "Not too bad, pass the butter please",
      "created_at": "2019-02-20 13:35:58 -0800"
    },
    "3": {
      "id": "3",
      "author_id": "1",
      "body": "You might as well have another sandwich and watch Johnny Carson",
      "created_at": "2019-02-20 13:38:36 -0800"
    }
  }
}


Since Rails evaluates Jbuilder views similarly to how it handles HTML templates, you can access instance variables (like @user) defined in the controller that renders the view, as well as any of their associations.

Common Jbuilder methods
json.<some_key>
To specify a key in the response, you can use the syntax: json.some_key some_value. The value can be either 1) any valid data type or 2) a block that defines a nested scope.

json.extract!
json.extract! lets you extract attributes from an instance directly:
#  jbuilder:
json.extract! @user, :fullname, :company, :email

# response:
{
  "fullname": "Howard Mohr",
  "company": "Minnesota, inc.",
  "email": "cantcomplain@pbs.org"
}

json.set!
You can use json.set! to set keys that you first need to evaluate as variables:

# jbuilder: 
json.set! @user.id do
    json.extract! @user, :fullname, :company, :email
end

# response:
{
  1: {
    "fullname": "Howard Mohr",
    "company": "Minnesota, inc.",
    "email": "cantcomplain@pbs.org"
  }
}

You also want to set the default format of resources to :json in the config/routes.rb file.Then Rails will automatically look for a .json file when you pass a template name to #render (render :index, for example).